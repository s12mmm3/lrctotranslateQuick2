name: MacOS
on: 
  push:
    paths:
      - '**'
  pull_request:
    paths:
      - '**'
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15,macos-11.0]
        include:
          # 6.6.0
          - qt_version: 6.6.2
            qt_arch: clang_64
    
    env:
      BUILD_TYPE: Release
      BUILD_PATH: build
      assume: --release
      qt_target: 'desktop'
      qt_host: 'mac'
      archiveName: 'QCloudMusicApi-${{ github.ref_name }}-${{ matrix.qt_version }}-${{ matrix.qt_arch }}'
    steps:
      # macos 11.0 默认环境变了,要指定
      - name: prepare env
        if: ${{ matrix.os == 'macos-11.0' }}
        run: |
          softwareupdate --all --install --force
          sudo xcode-select --print-path
          sudo xcode-select --switch /Library/Developer/CommandLineTools       
      # 安装Qt
      - name: Install Qt
        if: 'true'
        # 使用外部action。这个action专门用来安装Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ matrix.qt_version }}
          host: ${{ env.qt_host }}
          target: ${{ env.qt_target }}
          arch: ${{ matrix.qt_arch }}
          install-deps: 'true'
          cache: 'true'
          aqtversion: '==3.1.*'
          modules: ${{ matrix.modules }}
          # tools: ${{ matrix.tools }}
      # 拉取代码
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: true

      - name: CMake Build
        id: build
        run: |
          cmake -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE_INSTALL_PREFIX=${{ env.BUILD_PATH }} -B ${{ env.BUILD_PATH }}
          ls
      # CMake Install
      - name: CMake Install
        env:
          prefix: ${{ github.workspace }}
        run: |
          cd ${{ github.workspace }}
          cmake --build ${{ env.BUILD_PATH }} --target install --config ${{ env.BUILD_TYPE }} -j
          ls
      # 打包
      - name: package
        run: |
          # 拷贝依赖
          macdeployqt ${{ github.workspace }}/${{ env.BUILD_PATH }}/${{ env.BUILD_TYPE }}/lrctotranslateQuick2.app -qmldir=. -verbose=1 -dmg
      # 上传artifacts          
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.archiveName }}
          path: ${{ github.workspace }}/${{ env.BUILD_PATH }}/${{ env.BUILD_TYPE }}/lrctotranslateQuick2.app
      # tag 上传Release
      - name: uploadRelease
        if: startsWith(github.event.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.workspace }}/${{ env.BUILD_PATH }}/${{ env.archiveName }}.dmg
          asset_name: ${{ env.archiveName }}
          tag: ${{ github.ref }}
          overwrite: true
